--- sysparams.c	2020-02-02 22:55:00.000000000 +0400
+++ src/wine-wine-5.1/dlls/user32/sysparams.c	2020-02-09 16:07:58.000000000 +0400
@@ -258,7 +258,9 @@
 #define NULLDRV_DEFAULT_HMONITOR ((HMONITOR)(UINT_PTR)(0x10000 + 1))
 
 /* Strings for monitor functions */
-static const WCHAR DEFAULT_ADAPTER_NAME[] = {'\\','\\','.','\\','D','I','S','P','L','A','Y','1',0};
+static const WCHAR DEFAULT_ADAPTER_NAME[] = {'\\','\\','.','\\','D','I','S','P','L','A','Y','1','\\',
+                                             'A','d','a','p','t','e','r','0',0};
+
 static const WCHAR DEFAULT_MONITOR_NAME[] = {'\\','\\','.','\\',
                                              'D','I','S','P','L','A','Y','1','\\',
                                              'M','o','n','i','t','o','r','0',0};
@@ -268,12 +270,12 @@
                                            'V','E','N','_','0','0','0','0','&',
                                            'D','E','V','_','0','0','0','0','&',
                                            'S','U','B','S','Y','S','_','0','0','0','0','0','0','0','0','&',
-                                           'R','E','V','_','0','0',0};
+                                           'R','E','V','_','0','0','\\',0};
 static const WCHAR DEFAULT_MONITOR_ID[] = {'M','O','N','I','T','O','R','\\',
                                            'D','e','f','a','u','l','t','_','M','o','n','i','t','o','r','\\',
                                            '{','4','d','3','6','e','9','6','e','-','e','3','2','5','-','1','1','c','e','-',
                                            'b','f','c','1','-','0','8','0','0','2','b','e','1','0','3','1','8','}',
-                                           '\\','0','0','0','0',0};
+                                           '\\','0','0','0','0','\\',0};
 static const WCHAR DEFAULT_MONITOR_INTERFACE_ID[] = {'\\','\\','\?','\\',
                                                      'D','I','S','P','L','A','Y','#','D','e','f','a','u','l','t','_','M','o','n','i','t','o','r','#',
                                                      '4','&','1','7','f','0','f','f','5','4','&','0','&','U','I','D','0','#',
@@ -4055,9 +4057,6 @@
     return TRUE;
 }
 
-/***********************************************************************
- *		EnumDisplayDevicesW (USER32.@)
- */
 BOOL WINAPI EnumDisplayDevicesW( LPCWSTR device, DWORD index, DISPLAY_DEVICEW *info, DWORD flags )
 {
     SP_DEVINFO_DATA device_data = {sizeof(device_data)};
@@ -4074,164 +4073,12 @@
     BOOL ret = FALSE;
 
     TRACE("%s %d %p %#x\n", debugstr_w( device ), index, info, flags);
-
-    wait_graphics_driver_ready();
-    mutex = get_display_device_init_mutex();
-
-    /* Find adapter */
-    if (!device)
-    {
-        sprintfW( key_nameW, VIDEO_VALUE_FMT, index );
-        size = sizeof(bufferW);
-        if (RegGetValueW( HKEY_LOCAL_MACHINE, VIDEO_KEY, key_nameW, RRF_RT_REG_SZ, NULL, bufferW, &size ))
-            goto done;
-
-        /* DeviceKey */
-        if (info->cb >= offsetof(DISPLAY_DEVICEW, DeviceKey) + sizeof(info->DeviceKey))
-            lstrcpyW( info->DeviceKey, bufferW );
-
-        /* DeviceName */
-        sprintfW( info->DeviceName, ADAPTER_FMT, index + 1 );
-
-        /* Strip \Registry\Machine\ */
-        lstrcpyW( key_nameW, bufferW + 18 );
-
-        /* DeviceString */
-        size = sizeof(info->DeviceString);
-        if (RegGetValueW( HKEY_LOCAL_MACHINE, key_nameW, DRIVER_DESC, RRF_RT_REG_SZ, NULL,
-                          info->DeviceString, &size ))
-            goto done;
-
-        /* StateFlags */
-        size = sizeof(info->StateFlags);
-        if (RegGetValueW( HKEY_CURRENT_CONFIG, key_nameW, STATE_FLAGS, RRF_RT_REG_DWORD, NULL,
-                          &info->StateFlags, &size ))
-            goto done;
-
-        /* DeviceID */
-        if (info->cb >= offsetof(DISPLAY_DEVICEW, DeviceID) + sizeof(info->DeviceID))
-        {
-            if (flags & EDD_GET_DEVICE_INTERFACE_NAME)
-                info->DeviceID[0] = 0;
-            else
-            {
-                size = sizeof(bufferW);
-                if (RegGetValueW( HKEY_CURRENT_CONFIG, key_nameW, GPU_ID, RRF_RT_REG_SZ | RRF_ZEROONFAILURE, NULL,
-                                  bufferW, &size ))
-                    goto done;
-                set = SetupDiCreateDeviceInfoList( &GUID_DEVCLASS_DISPLAY, NULL );
-                if (!SetupDiOpenDeviceInfoW( set, bufferW, NULL, 0, &device_data )
-                    || !SetupDiGetDeviceRegistryPropertyW( set, &device_data, SPDRP_HARDWAREID, NULL, (BYTE *)bufferW,
-                                                           sizeof(bufferW), NULL ))
-                    goto done;
-                lstrcpyW( info->DeviceID, bufferW );
-            }
-        }
+    
+    if(index > 1) {
+      return FALSE;  
     }
-    /* Find monitor */
-    else
-    {
-        /* Check adapter name */
-        if (strncmpiW( device, ADAPTER_PREFIX, ARRAY_SIZE(ADAPTER_PREFIX) ))
-            goto done;
-
-        adapter_index = strtolW( device + ARRAY_SIZE(ADAPTER_PREFIX), NULL, 10 );
-        sprintfW( key_nameW, VIDEO_VALUE_FMT, adapter_index - 1 );
-
-        size = sizeof(bufferW);
-        if (RegGetValueW( HKEY_LOCAL_MACHINE, VIDEO_KEY, key_nameW, RRF_RT_REG_SZ, NULL, bufferW, &size ))
-            goto done;
-
-        /* DeviceName */
-        sprintfW( info->DeviceName, MONITOR_FMT, adapter_index, index );
-
-        /* Get monitor instance */
-        /* Strip \Registry\Machine\ first */
-        lstrcpyW( key_nameW, bufferW + 18 );
-        sprintfW( bufferW, MONITOR_ID_VALUE_FMT, index );
-
-        size = sizeof(instanceW);
-        if (RegGetValueW( HKEY_CURRENT_CONFIG, key_nameW, bufferW, RRF_RT_REG_SZ, NULL, instanceW, &size ))
-            goto done;
-
-        set = SetupDiCreateDeviceInfoList( &GUID_DEVCLASS_MONITOR, NULL );
-        if (!SetupDiOpenDeviceInfoW( set, instanceW, NULL, 0, &device_data ))
-            goto done;
-
-        /* StateFlags */
-        if (!SetupDiGetDevicePropertyW( set, &device_data, &WINE_DEVPROPKEY_MONITOR_STATEFLAGS, &type,
-                                        (BYTE *)&info->StateFlags, sizeof(info->StateFlags), NULL, 0 ))
-            goto done;
-
-        /* DeviceString */
-        if (!SetupDiGetDeviceRegistryPropertyW( set, &device_data, SPDRP_DEVICEDESC, NULL,
-                                                (BYTE *)info->DeviceString,
-                                                sizeof(info->DeviceString), NULL ))
-            goto done;
-
-        /* DeviceKey */
-        if (info->cb >= offsetof(DISPLAY_DEVICEW, DeviceKey) + sizeof(info->DeviceKey))
-        {
-            if (!SetupDiGetDeviceRegistryPropertyW( set, &device_data, SPDRP_DRIVER, NULL, (BYTE *)bufferW,
-                                                    sizeof(bufferW), NULL ))
-                goto done;
 
-            lstrcpyW( info->DeviceKey, NT_CLASS );
-            lstrcatW( info->DeviceKey, bufferW );
-        }
-
-        /* DeviceID */
-        if (info->cb >= offsetof(DISPLAY_DEVICEW, DeviceID) + sizeof(info->DeviceID))
-        {
-            if (flags & EDD_GET_DEVICE_INTERFACE_NAME)
-            {
-                lstrcpyW( info->DeviceID, MONITOR_INTERFACE_PREFIX );
-                lstrcatW( info->DeviceID, instanceW );
-                lstrcatW( info->DeviceID, GUID_DEVINTERFACE_MONITOR );
-                /* Replace '\\' with '#' after prefix */
-                for (next_charW = info->DeviceID + strlenW( MONITOR_INTERFACE_PREFIX ); *next_charW;
-                     next_charW++)
-                {
-                    if (*next_charW == '\\')
-                        *next_charW = '#';
-                }
-            }
-            else
-            {
-                if (!SetupDiGetDeviceRegistryPropertyW( set, &device_data, SPDRP_HARDWAREID, NULL, (BYTE *)bufferW,
-                                                        sizeof(bufferW), NULL ))
-                    goto done;
-
-                lstrcpyW( info->DeviceID, bufferW );
-                lstrcatW( info->DeviceID, BACKSLASH );
-
-                if (!SetupDiGetDeviceRegistryPropertyW( set, &device_data, SPDRP_DRIVER, NULL, (BYTE *)bufferW,
-                                                        sizeof(bufferW), NULL ))
-                    goto done;
-
-                lstrcatW( info->DeviceID, bufferW );
-            }
-        }
-    }
-
-    ret = TRUE;
-done:
-    release_display_device_init_mutex( mutex );
-    SetupDiDestroyDeviceInfoList( set );
-    if (ret)
-        return ret;
-
-    /* Fallback to report at least one adapter and monitor, if user driver didn't initialize display device registry */
-    if (index)
-        return FALSE;
-
-    /* If user driver did initialize the registry, then exit */
-    if (!RegOpenKeyW( HKEY_LOCAL_MACHINE, VIDEO_KEY, &hkey ))
-    {
-        RegCloseKey( hkey );
-        return FALSE;
-    }
-    WARN("Reporting fallback display devices\n");
+    TRACE("Reporting fallback display devices\n");
 
     /* Adapter */
     if (!device)
